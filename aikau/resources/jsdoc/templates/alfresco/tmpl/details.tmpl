<?js
var data = obj;
var self = this;
var defaultObjectClass = '';

// Check if the default value is an object, if so, apply code highlighting
if (data.defaultvalue && data.defaultvaluetype === 'object') {
    data.defaultvalue = "<pre class=\"prettyprint\"><code>" + data.defaultvalue + "</code></pre>";
    defaultObjectClass = ' class="object-value"';
}
?>
<dl class="details">
    <?js
        var properties = data.properties;
        if (properties && properties.length && properties.forEach) { 
    ?>
        
        <h5 class="subsection-title">Properties:</h5>
        
        <dl><?js= this.partial('properties.tmpl', properties) ?></dl>
        
    <?js } ?>
        
    <?js if (data.version) {?>
    <dt class="tag-version">Version:</dt>
    <dd class="tag-version"><ul class="dummy"><li><?js= version ?></li></ul></dd>
    <?js } ?>
    
    <?js if (data.since) {?>
    <dt class="tag-since">Since:</dt>
    <dd class="tag-since"><ul class="dummy"><li><?js= since ?></dd>
    <?js } ?>

    <?js if (data.inherited && data.inherits) { ?>
    <dt class="inherited-from">Inherited From:</dt>
    <dd class="inherited-from"><ul class="dummy"><li>
        <?js= this.linkto(data.inherits, this.htmlsafe(data.inherits)) ?>
    </li></dd>
    <?js } ?>
    
    <?js if (data.deprecated) { ?>
        <dt class="important tag-deprecated">Deprecated:</dt><?js
            if (data.deprecated === true) { ?><dd class="yes-def tag-deprecated"><ul class="dummy"><li>Yes</li></ul></dd><?js }
            else { ?><dd><ul class="dummy"><li><?js= data.deprecated ?></li><ul></dd><?js }
        ?>
    <?js } ?>
    
    <?js if (data.author && author.length) {?>
    <dt class="tag-author">Author:</dt>
    <dd class="tag-author">
        <ul><?js author.forEach(function(a) { ?>
            <li><?js= self.resolveAuthorLinks(a) ?></li>
        <?js }); ?></ul>
    </dd>

    <?js if (data.pageSafe) { ?>
    <dt class="tag-default">Support:</dt>
    <dd class="tag-default">
        <ul><li>This module is safe to be used in an Aikau page model (at least until the next major release).</li></ul>
    </dd>
    <?js } ?> 

    <?js if (data.extendSafe) { ?>
    <dt class="tag-default">Support:</dt>
    <dd class="tag-default">
        <ul><li>This module is safe to be extended by 3rd-party widgets or services (at least until the next major release).</li></ul>
    </dd>
    <?js } ?> 

    <?js if (data.mixinSafe) { ?>
    <dt class="tag-default">Support:</dt>
    <dd class="tag-default">
        <ul><li>This module is safe to be mixed into 3rd-party widgets and services (at least until the next major release).</li></ul>
    </dd>
    <?js } ?> 

    <?js if (data.useSafe) { ?>
    <dt class="tag-default">Support:</dt>
    <dd class="tag-default">
        <ul><li>This module is safe to be used in 3rd party modules (at least until the next major release).</li></ul>
    </dd>
    <?js } ?> 

    <dt class="tag-copyright">Copyright:</dt>
    <dd class="tag-copyright"><ul class="dummy"><li>Copyright (C) 2005-<?js= new Date().getFullYear() ?> Alfresco Software Limited</li></ul></dd>

    <dt class="tag-license">License:</dt>
    <dd class="tag-license"><ul class="dummy"><li>GNU Lesser General Public License, see: <a href="https://wiki.alfresco.com/wiki/Open_Source_Licensing">Open Source Licensing</a></li></ul></dd>

    <?js } ?>

    <?js if (data.callable) { ?>
    <dt class="tag-default">Support:</dt>
    <dd class="tag-default">
        <ul><li>This function is safe to call by extending or mixing modules (at least until the next major release).</li></ul>
    </dd>
    <?js } ?> 

    <?js if (data.extendable) { ?>
    <dt class="tag-default">Support:</dt>
    <dd class="tag-default">
        <ul><li>This function is safe to be overridden by extending or mixing modules (at least until the next major release). The inherited code must be called in the overriding function and if the inherited function returns a value then that value must be returned by the overriding function.</li></ul>
    </dd>
    <?js } ?> 

    <?js if (data.overrideable) { ?>
    <dt class="tag-default">Support:</dt>
    <dd class="tag-default">
        <ul><li>This function is safe to be overridden by extending or mixing modules (at least until the next major release). The inherited code does not need to be called however the overriding function must perform the
        designated action and return the appropriate data where appropriate.</li></ul>
    </dd>
    <?js } ?> 

    <?js if (data.extensionPoint) { ?>
    <dt class="tag-default">Support:</dt>
    <dd class="tag-default">
        <ul><li>This function is provided as an extension point and is safe to be overridden by extending or mixing modules (at least until the next major release).</li></ul>
    </dd>
    <?js } ?> 

    <?js if (data.defaultvalue) {?>
    <dt class="tag-default">Default Value:</dt>
    <dd class="tag-default"><ul class="dummy">
            <li<?js= defaultObjectClass ?>><?js= data.defaultvalue ?></li>
        </ul></dd>
    <?js } ?>
    
    <?js if (data.meta) {?>
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <?js= self.linkto(meta.shortpath) ?>, <?js= self.linkto(meta.shortpath, 'line ' + meta.lineno, null, 'line' + meta.lineno) ?>
    </li></ul></dd>
    <?js } ?>
    
    <?js if (data.tutorials && tutorials.length) {?>
    <dt class="tag-tutorial">Tutorials:</dt>
    <dd class="tag-tutorial">
        <ul><?js tutorials.forEach(function(t) { ?>
            <li><?js= self.tutoriallink(t) ?></li>
        <?js }); ?></ul>
    </dd>
    <?js } ?>
    
    <?js if (data.see && see.length) {?>
    <dt class="tag-see">See:</dt>
    <dd class="tag-see">
        <ul><?js see.forEach(function(s) { ?>
            <li><?js= self.linkto(s) ?></li>
        <?js }); ?></ul>
    </dd>
    <?js } ?>
    
    <?js if (data.todo && todo.length) {?>
    <dt class="tag-todo">To Do:</dt>
    <dd class="tag-todo">
        <ul><?js todo.forEach(function(t) { ?>
            <li><?js= t ?></li>
        <?js }); ?></ul>
    </dd>
    <?js } ?>
</dl>
